import 'package:app_demo_get/models/get-cart.dart';
import 'package:dio/dio.dart';

class ApiAddToCart {
  static Future<bool> addToCart(String token, String foodID, int amount) async {
    final response = await Dio().post(
      'https://kltn-foodoffer.herokuapp.com/api/user/func/addcart',
      data: {'foodID': foodID, 'amount': amount},
      options: Options(headers: {'authorization': token}),
    );
    Autogenerated auto = Autogenerated.fromJson(response.data);
    if (auto.status == 'success') return true;
    return false;
  }

  static Future<List<Cart>> getCart(String token) async {
    final response = await Dio().get(
        'https://kltn-foodoffer.herokuapp.com/api/user/func/cart',
        options: Options(headers: {'authorization': token}));
    Map<String, dynamic> map = response.data;
    var get = GetCart.fromJson(map);
    return get.data.cart;
  }

  static Future<bool> updateCart(
      String token, String foodID, int amount) async {
    final response = await Dio().post(
      'https://kltn-foodoffer.herokuapp.com/api/user/func/updateCart',
      data: {'foodID': foodID, 'amount': amount},
      options: Options(headers: {'authorization': token}),
    );
    Autogenerated auto = Autogenerated.fromJson(response.data);
    if (auto.status == 'success') return true;
    return false;
  }

  static Future<bool> removeCart(String token, List<String> cartIDs) async {
    final response = await Dio().post(
      'https://kltn-foodoffer.herokuapp.com/api/user/func/removeFoodsInCart',
      data: {
        'cart_id': cartIDs,
      },
      options:
          Options(contentType: Headers.formUrlEncodedContentType, headers: {
        'authorization': token,
      }),
    );
    print('Day la response removeCart $response');
    if (response.data['status'] == 'success') {
      return true;
    }
    return false;
  }
}

class Autogenerated {
  String status;
  Data data;

  Autogenerated({this.status, this.data});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    data = json['data'] != null ? new Data.fromJson(json['data']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['status'] = this.status;
    if (this.data != null) {
      data['data'] = this.data.toJson();
    }
    return data;
  }
}

class Data {
  String message;

  Data({this.message});

  Data.fromJson(Map<String, dynamic> json) {
    message = json['message'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['message'] = this.message;
    return data;
  }
}
